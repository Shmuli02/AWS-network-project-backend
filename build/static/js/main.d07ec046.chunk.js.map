{"version":3,"sources":["services/notes.js","components/Upload.js","http-common.js","services/upload-files.js","components/upload-files.js","components/Note.js","components/Timer.js","components/Notification.js","pages/Task.js","services/login.js","pages/Login.js","pages/Home.js","services/user.js","pages/User.js","pages/Register.js","pages/Gallery.js","services/tasks.js","services/images.js","index.js"],"names":["baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","setToken","newToken","update","id","put","deleteNote","delete","Upload","baseURL","file","user","UploadProgress","formData","FormData","append","http","UploadFiles","props","selectFile","bind","upload","state","selectedFiles","undefined","currentFile","progress","message","fileInfos","event","this","setState","target","files","UploadService","Math","round","loaded","total","getFiles","catch","className","role","aria-valuenow","aria-valuemin","aria-valuemax","style","width","type","onChange","disabled","onClick","Component","EditNoteForm","taskId","note","handleNoteChange","title","useState","show","setShow","noteToEdit","url","setUrl","handleClose","handleEditNote","loggedUserJSON","window","localStorage","getItem","JSON","parse","logUser","noteService","handleDelete","Button","variant","Modal","onHide","Header","closeButton","Title","Body","Col","Form","Group","controlId","Label","Control","as","rows","e","value","placeholder","Footer","NewNoteForm","allowedToPublish","setAllowedToPublish","handleNewNote","task","username","Check","label","checked","getNotes","notes","filter","note2","hourSeconds","daySeconds","timerProps","isPlaying","size","strokeWidth","renderTime","dimension","time","Timer","remainingTime","Date","now","daysDuration","ceil","colors","duration","initialRemainingTime","elapsedTime","onComplete","totalElapsedTime","Notification","Tasks","tasks","notesId","map","errorMessage","Info","description","OverlayTrigger","trigger","placement","overlay","Popover","Content","Provider","fontSize","color","Table","striped","bordered","hover","includes","Badge","pill","login","credentials","Login","history","useHistory","setUsername","password","setPassword","setUser","setErrorMessage","handleLogin","preventDefault","loginService","setItem","stringify","onLogin","push","setTimeout","onSubmit","autoComplete","href","Home","register","userData","userdata","users","User","setUserData","userTasks","taskLenght","length","userTasksLenght","userServise","useEffect","getUserData","ProgressBar","diploma","Register","email","setEmail","password1","setPassword1","password2","setPassword2","firstname","setFirstName","lastname","setLastName","handleRegister","userService","ImageGallery","IMAGES","images","display","minHeight","border","overflow","enableImageSelection","enableLightbox","App","setTasks","setNotes","setImages","imageService","taskService","getData","getImages","getFunction","handleLogout","enevt","removeItem","handleNotesChange","ReactGA","initialize","pageview","location","pathname","search","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","Nav","Link","to","path","Task","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d07ec046.chunk.js","sourcesContent":["import axios from \"axios\"\nconst baseUrl = '/api/notes'\n\nlet token = null\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config)\n  return response.data\n}\n\nconst deleteNote = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default {getAll, create, setToken, update, deleteNote }","import React, { useRef } from \"react\";\nimport S3 from \"react-aws-s3\";\nimport uploadServise from '../services/uploads'\n\nfunction Upload(taskId) {\n  const fileInput = useRef();\n  const handleClick = async (event) => {\n    event.preventDefault();\n    const u = await uploadServise.create(fileInput)\n  };\n  \n  return (\n    <>\n      <form className='upload-steps' onSubmit={handleClick}>\n        <label>\n          Upload file:\n          <input type='file' ref={fileInput} />\n        </label>\n        <br />\n        <button type='submit'>Upload</button>\n      </form>\n    </>\n  );\n}\n\nexport default Upload;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:3003\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"../http-common\";\n\nclass UploadFilesService {\n  upload(file, user, UploadProgress) {\n    let formData = new FormData();\n\n    formData.append(\"file\", file);\n    formData.append(\"user\", user)\n    return http.post(\"https://aktiivinen-keppari.herokuapp.com/api/upload\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      UploadProgress,\n    });\n  }\n}\n\nexport default new UploadFilesService();\n","// https://github.com/bezkoder/react-file-upload/blob/master/src/components/upload-files.component.js \n\nimport React, { Component } from \"react\";\nimport UploadService from \"../services/upload-files\";\n\nexport default class UploadFiles extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFile = this.selectFile.bind(this);\n    this.upload = this.upload.bind(this);\n    this.state = {\n      selectedFiles: undefined,\n      currentFile: undefined,\n      progress: 0,\n      message: \"Muista painaa Lataa nappia\",\n\n      fileInfos: [],\n    };\n  }\n\n  selectFile(event) {\n    this.setState({\n      selectedFiles: event.target.files,\n    });\n  }\n\n  upload() {\n    let currentFile = this.state.selectedFiles[0];\n\n    this.setState({\n      progress: 0,\n      currentFile: currentFile,\n    });\n\n    UploadService.upload(currentFile, this.props.user, (event) => {\n      this.setState({\n        progress: Math.round((100 * event.loaded) / event.total),\n      });\n    })\n      .then((response) => {\n        this.setState({\n          message: response.data.message,\n        });\n        return UploadService.getFiles();\n      })\n      .then((files) => {\n        this.setState({\n          fileInfos: files.data,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          progress: 0,\n          message: \"Lataus valmis\",\n          currentFile: undefined,\n        });\n      });\n\n    this.setState({\n      selectedFiles: undefined,\n    });\n  }\n\n  render() {\n    const {\n      selectedFiles,\n      currentFile,\n      progress,\n      message,\n      fileInfos,\n    } = this.state;\n\n    return (\n      <div>\n        {currentFile && (\n          <div className=\"progress\">\n            <div\n              className=\"progress-bar progress-bar-info progress-bar-striped\"\n              role=\"progressbar\"\n              aria-valuenow={progress}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ width: progress + \"%\" }}\n            >\n              {progress}%\n            </div>\n          </div>\n        )}\n\n        <label className=\"btn btn-default\">\n          <input type=\"file\" onChange={this.selectFile} />\n        </label>\n\n        <button\n          className=\"btn btn-success\"\n          disabled={!selectedFiles}\n          onClick={this.upload}\n        >\n          Lataa\n        </button>\n\n        <div className=\"alert alert-light\" role=\"alert\">\n          {message}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {useCallback, useState} from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Badge from 'react-bootstrap/Badge'\nimport noteService from '../services/notes'\nimport Upload from './Upload'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport UploadFiles from \"../components/upload-files\";\n\nfunction EditNoteForm({taskId,note,handleNoteChange,title}) {\n  const [show, setShow] = useState(false);\n  const noteToEdit = note[0]\n  const [url, setUrl] = useState(noteToEdit.url)\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  \n\n  const handleEditNote = async (event) => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    const logUser = await JSON.parse(loggedUserJSON)\n    noteService.setToken(logUser.token)\n\n    const updatedNote = await noteService.update(noteToEdit.id,{\n      url: url\n    })\n    handleClose()\n    setUrl('')\n\n  }\n  \n  const handleDelete = async () => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    const logUser = await JSON.parse(loggedUserJSON)\n    noteService.setToken(logUser.token)\n    noteService.deleteNote(noteToEdit.id)\n    handleNoteChange()\n    handleClose()\n\n  }\n\n  const handleUrlChange = (e) => setUrl(e.target.value)\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Muokkaa suoritusta\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Col>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n              <Form.Label>Linkki</Form.Label>\n              <Form.Control as=\"textarea\" rows={2} onChange={handleUrlChange} value={url} placeholder=\"linkki\"/>\n            </Form.Group>\n\n          </Col>\n          <Col>\n            <Button variant=\"danger\" onClick={handleDelete}>\n              Poista suoritus\n            </Button>\n          </Col>\n        </Modal.Body>\n        \n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Peruuta\n          </Button>\n          <Button variant=\"primary\" onClick={handleEditNote}>\n            Tallenna\n          </Button>\n          \n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\n\nfunction NewNoteForm({taskId,handleNoteChange,user,title}) {\n  const [show, setShow] = useState(false);\n  const [url, setUrl] = useState('')\n  const [allowedToPublish, setAllowedToPublish] = useState(false)\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  \n  const handleNewNote = async (event) => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    const logUser = await JSON.parse(loggedUserJSON)\n    noteService.setToken(logUser.token)\n    const note = await noteService.create({\n      task: taskId,\n      user: logUser.username,\n      url: url,\n      allowedToPublish: allowedToPublish\n\n    })\n    handleNoteChange()\n    setAllowedToPublish(false)\n    handleClose()\n  }\n  \n  const handleUrlChange = (e) => setUrl(e.target.value)\n\n  const handleCheckChange = (e) => setAllowedToPublish(e.target.checked)\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Lisää suoritus\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Col>\n          <Form.Label>Lataa tiedosto tai lisää linkki</Form.Label>\n            <div className=\"container\" style={{ width: \"300\" }}>\n              <UploadFiles user={user}/>\n            </div>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n              <Form.Control as=\"textarea\" rows={2} onChange={handleUrlChange} value={url} placeholder=\"linkki\"/>\n            </Form.Group>\n            <Form.Group id=\"formGridCheckbox\">\n              <Form.Check type=\"checkbox\" label=\"kuvan/videon saa julkaista galleriassa\"  onChange={handleCheckChange}/>\n            </Form.Group>\n\n            </Col>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Peruuta\n          </Button>\n          <Button variant=\"primary\" onClick={handleNewNote}>\n            Tallenna\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nasync function getNotes() {\n  const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n  if (loggedUserJSON) {\n    const logUser = await JSON.parse(loggedUserJSON)\n    const notes = await noteService.getAll()\n    const note2 = await notes.filter(note => note.user.username === logUser.username)\n    return note2\n  }\n}\n\nexport  {\n  EditNoteForm,\n  NewNoteForm,\n  getNotes\n}","// https://codesandbox.io/s/musing-davinci-mqssz?fontsize=14&hidenavigation=1&theme=dark\n\nimport React from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport '../styles.css'\n\nconst minuteSeconds = 60;\nconst hourSeconds = 3600;\nconst daySeconds = 86400;\n\nconst timerProps = {\n  isPlaying: true,\n  size: 120,\n  strokeWidth: 6\n};\n\nconst renderTime = (dimension, time) => {\n  return (\n    <div className=\"time-wrapper\">\n      <div className=\"time\">{time}</div>\n      <div>{dimension}</div>\n    </div>\n  );\n};\n\n\nconst getTimeSeconds = (time) => (minuteSeconds - time) | 0;\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\nconst getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\nconst getTimeDays = (time) => (time / daySeconds) | 0;\n\nexport default function Timer() {\n  const stratTime = Date.now() / 1000\n  const endTime = 1627765199\n\n  const remainingTime = endTime - stratTime;\n  const days = Math.ceil(remainingTime / daySeconds);\n  const daysDuration = days * daySeconds;\n\n  return (\n    <div className=\"Timer\">\n      <CountdownCircleTimer\n        {...timerProps}\n        colors={[[\"#7E2E84\"]]}\n        duration={daysDuration}\n        initialRemainingTime={remainingTime}\n      >\n        {({ elapsedTime }) =>\n          renderTime(\"päivää\", getTimeDays(daysDuration - elapsedTime))\n        }\n      </CountdownCircleTimer>\n      <CountdownCircleTimer\n        {...timerProps}\n        colors={[[\"#D14081\"]]}\n        duration={daySeconds}\n        initialRemainingTime={remainingTime % daySeconds}\n        onComplete={(totalElapsedTime) => [\n          remainingTime - totalElapsedTime > hourSeconds\n        ]}\n      >\n        {({ elapsedTime }) =>\n          renderTime(\"tuntia\", getTimeHours(daySeconds - elapsedTime))\n        }\n      </CountdownCircleTimer>\n      <CountdownCircleTimer\n        {...timerProps}\n        colors={[[\"#EF798A\"]]}\n        duration={hourSeconds}\n        initialRemainingTime={remainingTime % hourSeconds}\n        onComplete={(totalElapsedTime) => [\n          remainingTime - totalElapsedTime > minuteSeconds\n        ]}\n      >\n        {({ elapsedTime }) =>\n          renderTime(\"minuutia\", getTimeMinutes(hourSeconds - elapsedTime))\n        }\n      </CountdownCircleTimer>\n      <div className=\"TimerSec\">\n      <CountdownCircleTimer \n        {...timerProps}\n        colors={[[\"#218380\"]]}\n        duration={minuteSeconds}\n        initialRemainingTime={remainingTime % minuteSeconds}\n        onComplete={(totalElapsedTime) => [\n          remainingTime - totalElapsedTime > 0\n        ]}\n      >\n        {({ elapsedTime }) =>\n          renderTime(\"sekuntia\", getTimeSeconds(elapsedTime))\n        }\n      </CountdownCircleTimer>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, {useState} from 'react'\nimport { Table, Button, OverlayTrigger,Tooltip, Image, Popover } from 'react-bootstrap'\nimport noteService from '../services/notes'\nimport {EditNoteForm, NewNoteForm} from '../components/Note'\nimport Badge from 'react-bootstrap/Badge'\nimport Timer from '../components/Timer'\nimport Notification from '../components/Notification'\nimport {IconContext} from \"react-icons\"\nimport { BsFillQuestionCircleFill } from \"react-icons/bs\";\n\n\nconst Tasks = ({tasks,notes,user,handleNoteChange}) => {\n  const notesId = notes.map(note => note.task)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n\n  const Info = ({title, description}) => (\n    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={\n      <Popover id=\"popover-basic\">\n      <Popover.Title as=\"h3\">{title}</Popover.Title>\n      <Popover.Content>\n      {description}\n      </Popover.Content>\n    </Popover>\n    }>\n      <Button variant=\"link\">\n      <IconContext.Provider  value={{ style: {fontSize: '20px', color: \"rgb(0, 0, 0)\"}}}>\n        <BsFillQuestionCircleFill />\n    </IconContext.Provider>\n      </Button>\n      \n    </OverlayTrigger>\n  );\n\n  return (\n  <div className=\"Task\">\n    <h1>Tehtävät</h1>\n    <Notification message={errorMessage} />\n    <br></br>\n    <h2>Aikaa jäljellä</h2>\n    <Timer />\n    <br></br>\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          {user ? <th>Suoritukset</th> : '' }\n          <th>Tehtävä</th>\n          {/* <th>Haastavuus</th> */}\n          {user ? <th>Muokkaus</th> : '' }\n        </tr>\n      </thead>\n      <tbody>\n        \n        {tasks.map(task =>\n          <tr key={task.id}>\n            {user ?\n            <td>\n              \n              {notesId.includes(task.id) \n              ? <Badge pill variant=\"success\">Suoritettu</Badge>\n              : <Badge pill variant=\"dark\">Ei suoritettu</Badge>\n              }\n            </td> : '' }\n            \n            <td>\n            <Info title={task.title} description={task.description}/> \n            {task.title}\n            \n            </td>\n            {/* <td>\n              {task.difficulty}\n            </td> */}\n            {user ?\n            <td>\n              {notesId.includes(task.id) \n              ? <EditNoteForm taskId={task.id} handleNoteChange={handleNoteChange} title={task.title} note={notes.filter(function(note) {\n                return note.task == task.id\n              })}/>\n              : <NewNoteForm taskId={task.id} handleNoteChange={handleNoteChange} user={user} title={task.title}/> \n              }\n            </td> : ''}\n          </tr>\n        )}\n      </tbody>\n    </Table>\n  </div>\n  )\n}\n\nexport default Tasks","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, {useState, useEffect} from 'react'\nimport {\n  useHistory\n} from \"react-router-dom\"\nimport loginService from '../services/login'\nimport Notification from '../components/Notification'\n\n\n\nconst Login = (props) => {\n  const history = useHistory()\n\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n\n  \n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      ) \n      setUser(user)\n      setUsername('')\n      setPassword('')\n      props.onLogin(username)\n      history.push('/')\n    } catch (exception) {\n      setErrorMessage('Väärä käyttäjätunnus tai salasana')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n\n\n  return (\n    <div>\n      <Notification message={errorMessage} />\n      <form className=\"px-4 py-3\" onSubmit={handleLogin}>\n        <div className=\"form-group\">\n          <label>Käyttäjänimi</label>\n          <input type=\"text\" autoComplete=\"username\" className=\"form-control\" value={username} onChange={({ target }) => setUsername(target.value)} placeholder=\"Käyttäjänimi\"/>\n        </div>\n        <div className=\"form-group\">\n          <label >Salasana</label>\n          <input type=\"password\" autoComplete=\"current-password\" className=\"form-control\" value={password} onChange={({ target }) => setPassword(target.value)} placeholder=\"Salasana\"/>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Kirjaudu</button>\n      </form>\n      <div className=\"dropdown-divider\"></div>\n      <a className=\"dropdown-item\" href=\"/register\"><b>Uusi käyttäjä? Rekisteröidy</b></a>\n  </div>\n  )\n}\n\nexport default Login","import React from 'react'\nimport Upload from '../components/Upload'\n\n\nconst Home = () => (\n  <div className=\"Home\">\n    \n    <h1>Aktiivinen keppari kilpailu jatkuu!</h1>\n    <p>Kesän 2021 kilpailussa keppariharrastaja suorittaa tehtäväpassin tehtävät kilpailuaikana. Kaikkien osallistujien kesken arvotaan hyviä esinepalkintoja.</p>\n\n    <p><b>Kilpailuaika:</b> 5.7.–31.7.2021</p>\n\n    <p><b>Osallistumisoikeus:</b> Avoin kaikille</p>\n\n    <h4>Palkinnot:</h4>\n    <ol>\n      <li>Kaikkien vähintään yhden tehtävän suorittaneiden kesken arvotaan hyvät esinepalkinnot</li>\n      <li>Bonuspalkinnot arvotaan niiden kesken, jotka ovat suorittaneet kaikki tehtävät kilpailuaikana</li>\n    </ol>\n    <h4>Tehtävät:</h4>\n      <p>Kilpailussa on helppoja ja vaikeita tehtäviä. Osassa tehtäviä osallistujan tulee lähettää kuva tai video, kun suoritus rekisteröidään kilpailusivuille.</p>\n\n    <h4>Säännöt:</h4>\n      <p>Kilpailussa saa tehdä yhteistyötä tehtävien suorittamisessa. Kilpailussa tulee noudattaa tekijänoikeuksia, joten älä kopioi kuvia tai videoita joihin sinulla ei ole oikeuksia.</p>\n\n    <b>Ohjeet osallistumiseen:</b>\n    <ul>\n      <li>Avaa kilpailusivut hewi.fi/aktiivinen-keppari/</li>\n      <li>Luo käyttäjätunnus kilpailu sivulle <a href='https://aktiivinen-keppari.herokuapp.com/register'>tästä</a></li>\n      <li>Kun olet tehnyt tehtävän, käy rekisteröimässä suoritus <a href='https://aktiivinen-keppari.herokuapp.com/tasks'> Tehtävät sivulle</a></li>\n      <li>Kun olet suorittanut kaikki tehtävät, voit ladata todistuksen suorituksestasi pari päivän sisällä </li>\n    </ul>\n    <h4>Galleria</h4>\n    <p>Halutessasi voit lisätä kuvan suorituksestasi julkiseen galleriaan</p>\n    <h4>Yhteystiedot:</h4>\n    <p>Ongalma tilanteissa ota yhteyttä sähköpostitse <a href='mailto:keppari@hewi.fi'>keppari@hewi.fi</a></p>\n    \n  </div>\n)\n\nexport default Home","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst register = async newObject => {\n  const response = await axios.post(baseUrl,newObject)\n  return response.data\n}\nconst userData = async user => {\n  const response = await axios.get(baseUrl)\n  const userdata = response.data.filter(users => users.username === user.username )\n\n  return userdata\n}\n\nexport default {register, userData}","import React, {useState, useEffect} from 'react'\nimport { ProgressBar, Table, Badge, Button } from 'react-bootstrap'\nimport {EditNoteForm, NewNoteForm} from '../components/Note'\nimport userServise from '../services/user'\n\nconst User = ({tasks,user,notes,handleNoteChange}) => {\n  const [userData, setUserData] = useState([])\n  const notesId = notes.map(note => note.task)\n  const userTasks = tasks.filter(task => notesId.includes(task.id))\n  const taskLenght = tasks.length\n  const userTasksLenght = userTasks.length\n  async function getUserData() {\n    const userdata = await userServise.userData({username:user})\n    setUserData(userdata[0])\n  }\n  useEffect( () => {\n    getUserData()\n  },[])\n\n  return (\n  <div className=\"UserPage\">\n    <h1>Omat sivut</h1>\n    <ProgressBar now={userTasksLenght/taskLenght*100} />\n    <p>suoritettu {userTasksLenght}/{taskLenght} tehtävää</p>\n    {taskLenght == userTasksLenght ? \n    <div>\n      {userData.diploma == '' ?\n        <div>\n          <p>Olet suorittanut kaikki tehtävät <Badge variant=\"info\">Tarkistuksessa</Badge></p>\n        </div> :\n\n        <div>\n          <p>Olet suorittanut kaikki tehtävät <Badge variant=\"success\">Tarkistettu</Badge></p>\n          <p>Voit ladata diplomin tämän linkin kautta <a className=\"btn btn-success\" href={userData.diploma} target=\"_blank\">Lataa diplomi</a></p>\n          \n\n        </div>\n        }\n    </div>\n    : ''}\n    \n    {userTasksLenght>=1 ? \n    <div>\n      <h3>Suoritukset</h3>\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th>Tehtävä</th>\n          <th>Muokkaus</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n        {userTasks.map(task =>\n          <tr key={task.id}>\n            <td>\n              {task.title}\n            </td>\n            <td>\n              {notesId.includes(task.id) \n              ? <EditNoteForm taskId={task.id} handleNoteChange={handleNoteChange} note={notes.filter(function(note) {\n                return note.task == task.id\n              })}/>\n              : '' }\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </Table>\n    </div>\n    : <p>ei suorituksia</p>}\n  </div>\n  )\n}\n\nexport default User","import React, {useState, useEffect} from 'react'\nimport userService from '../services/user'\nimport Notification from '../components/Notification'\nimport { Redirect } from 'react-router'\nimport {\n  useHistory\n} from \"react-router-dom\"\n\n\nconst Register = (props) => {\n  const history = useHistory()\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password1, setPassword1] = useState('')\n  const [password2, setPassword2] = useState('')\n  const [firstname, setFirstName] = useState('')\n  const [lastname, setLastName] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleRegister = async (event) => {\n    event.preventDefault()\n   \n\n    if (password1 === password2) {\n      try {\n      const user = await userService.register({\n        username: username,\n        firstname: firstname,\n        lastname: lastname,\n        email: email,\n        password: password1\n      })\n      history.push('/login')\n      } catch (exception) {\n        event.preventDefault()\n        setErrorMessage('Virhe')\n        \n      }\n    } else {\n      setErrorMessage('Salasanat eivät täsmää')\n      event.preventDefault()\n  } \n}\n\n  return (\n    <div>\n      <Notification message={errorMessage} />\n      <form className=\"px-4 py-3\" onSubmit={handleRegister}>\n        <div className=\"form-group\">\n          <label>Käyttäjänimi</label>\n          <input type=\"text\" className=\"form-control\" value={username} onChange={({ target }) => setUsername(target.value)} placeholder=\"Käyttäjänimi\" />\n        </div>\n        <div className=\"form-group\">\n          <label>Etunimi</label>\n          <input type=\"text\" className=\"form-control\" value={firstname} onChange={({ target }) => setFirstName(target.value)} placeholder=\"Etunimi\" />\n          <label>Sukunimi</label>\n          <input type=\"text\" className=\"form-control\" value={lastname} onChange={({ target }) => setLastName(target.value)} placeholder=\"Sukunimi\" />\n        </div>\n        <div className=\"form-group\">\n          <label>Sähköposti</label>\n          <input type=\"email\" className=\"form-control\" value={email} onChange={({ target }) => setEmail(target.value)} placeholder=\"Sähköposti\" />\n        </div>\n        <div className=\"form-group\">\n          <label>Salasana</label>\n          <input type=\"password\" autoComplete=\"new-password\" className=\"form-control\" value={password1} onChange={({ target }) => setPassword1(target.value)} placeholder=\"Salasana\" />\n        </div>\n        <div className='form-group'>\n          <label>Vahvista Salasana</label>\n          <input type=\"password\" autoComplete=\"new-password\" className=\"form-control\" value={password2} onChange={({ target }) => setPassword2(target.value)} placeholder=\"Vahvista salasana\" />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Rekisteröidy</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Register","import React from 'react'\nimport Gallery from 'react-grid-gallery';\n\nconst ImageGallery = ({images}) => {\n  const IMAGES = images\n  return (\n    <div>\n      <div style={{\n                    display: \"block\",\n                    minHeight: \"1px\",\n                    width: \"100%\",\n                    border: \"1px solid #ddd\",\n                    overflow: \"auto\"}}></div>\n      <Gallery images={IMAGES} enableImageSelection={false} enableLightbox={false}/>\n    </div>\n  )\n}\n\nexport default ImageGallery","import axios from 'axios'\nconst baseUrl = '/api/tasks'\n\nlet token = null\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\n\nexport default { getAll, setToken }","import axios from 'axios'\nconst baseUrl = '/api/images'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nexport default {getAll}","import React, { useState, useEffect } from 'react'\n\nimport Task from './pages/Task'\nimport Login from './pages/Login'\nimport Home from './pages/Home'\nimport User from './pages/User'\nimport Register from './pages/Register'\nimport ImageGallery from './pages/Gallery'\n\n\nimport taskService from './services/tasks'\nimport noteService from './services/notes'\nimport imageService from './services/images'\n\nimport { getNotes } from './components/Note'\n\nimport ReactDOM from 'react-dom'\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useParams,\n} from \"react-router-dom\"\nimport ReactGA from 'react-ga';\n\n\n\nconst App = () => {\n  const [tasks, setTasks] = useState([])\n  const [user, setUser] = useState(null)\n  const [notes, setNotes] = useState([])\n  const [images, setImages] = useState([])\n  \n  async function getImages() {\n    const images = await imageService.getAll()\n    setImages(images)\n  }\n\n  async function getFunction() {\n    const tasks = await taskService.getAll()\n    setTasks( tasks )\n  }\n  async function getData() {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const logUser = await JSON.parse(loggedUserJSON)\n      setUser(logUser.username)\n    const notes = await getNotes()\n    setNotes(notes)\n    }\n  }\n  useEffect( () => {\n    getImages()\n  },[])\n\n  useEffect( () => {\n    getFunction()\n  }, [])\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  const login = (user) => {\n    getData()\n    setUser(user)\n  }\n\n  const padding = {\n    padding: 5\n  }\n\n  const handleLogout = (enevt) => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    setUser(null)\n    setNotes([])\n  }\n\n  const handleNotesChange = async (event) => {\n    getData()\n  }\n  \n  const logout = () => (\n    <button onClick={handleLogout}>Kirjaudu ulos</button>\n  )\n\n  ReactGA.initialize('UA-200757435-1');\n  ReactGA.pageview(window.location.pathname + window.location.search);\n\n\n  return (\n    <div>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" >\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#\" as=\"span\">\n              <Link to=\"/\" className=\"link\">Etusivu</Link>\n            </Nav.Link>\n            <Nav.Link href=\"#\" as=\"span\">\n              <Link to=\"/tasks\" className=\"link\">Tehtävät</Link>\n            </Nav.Link>\n            <Nav.Link href=\"#\" as=\"span\">\n              <Link to=\"/user\" className=\"link\">Oma sivu</Link>\n            </Nav.Link>\n            <Nav.Link href=\"#\" as=\"span\">\n              <Link to=\"/gallery\" className=\"link\">Galleria</Link>\n            </Nav.Link>\n            <Nav.Link href=\"/user\" as=\"span\">\n              {user\n                ? <em>{user} kirjautunut {logout()}</em>\n                : <Link to=\"/login\" className=\"link\" >Kirjaudu</Link>\n              }\n          </Nav.Link>\n          \n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        \n        <Route path=\"/tasks\">\n          <Task tasks={tasks} user={user} notes={notes} handleNoteChange={handleNotesChange}/>\n        </Route>\n        <Route path=\"/user\">\n          {user ? <User notes={notes} handleNoteChange={handleNotesChange} user={user} tasks={tasks}/> : <Redirect to=\"/login\" />}\n        </Route>\n        <Route path=\"/login\">\n          <Login onLogin={login} />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <Route path=\"/gallery\">\n          <ImageGallery images={images}/>\n        </Route>\n        <Route path=\"/\">\n          <Home />\n\n        </Route>\n      </Switch>    \n      <div>\n        <br />\n        {/* <em>Sivujen toteutus: Mitavain</em> */}\n      </div>\n    </div>\n  )\n}\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)"],"sourceRoot":""}