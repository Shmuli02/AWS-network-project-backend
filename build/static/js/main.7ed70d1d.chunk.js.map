{"version":3,"sources":["services/notes.js","components/Upload.js","http-common.js","services/upload-files.js","components/upload-files.js","components/Note.js","components/Timer.js","components/Notification.js","pages/Task.js","services/login.js","pages/Login.js","pages/Home.js","services/user.js","pages/User.js","pages/Register.js","pages/Gallery.js","services/tasks.js","services/images.js","index.js"],"names":["baseUrl","token","create","newObject","config","headers","Authorization","axios","post","response","data","update","id","put","deleteNote","delete","getAll","get","then","setToken","newToken","Upload","baseURL","file","user","UploadProgress","formData","FormData","append","http","UploadFiles","props","selectFile","bind","upload","state","selectedFiles","undefined","currentFile","progress","message","fileInfos","event","this","setState","target","files","UploadService","Math","round","loaded","total","getFiles","catch","className","role","style","width","type","onChange","disabled","onClick","Component","EditNoteForm","taskId","note","handleNoteChange","title","useState","show","setShow","noteToEdit","url","setUrl","handleClose","handleEditNote","loggedUserJSON","window","localStorage","getItem","JSON","parse","logUser","noteService","handleDelete","Button","variant","Modal","onHide","Header","closeButton","Title","Body","Col","Form","Group","controlId","Label","Control","as","rows","e","value","placeholder","Footer","NewNoteForm","allowedToPublish","setAllowedToPublish","handleNewNote","task","username","Check","label","checked","getNotes","notes","filter","note2","hourSeconds","daySeconds","timerProps","isPlaying","size","strokeWidth","renderTime","dimension","time","Timer","remainingTime","Date","now","daysDuration","ceil","colors","duration","initialRemainingTime","elapsedTime","onComplete","totalElapsedTime","Notification","Tasks","tasks","notesId","map","errorMessage","Info","description","OverlayTrigger","trigger","placement","overlay","Popover","Content","Provider","fontSize","color","Table","striped","bordered","hover","includes","Badge","pill","login","credentials","Login","history","useHistory","setUsername","password","setPassword","setUser","setErrorMessage","handleLogin","preventDefault","loginService","setItem","stringify","onLogin","push","setTimeout","onSubmit","autoComplete","href","Home","Alert","register","userData","userdata","users","User","setUserData","userTasks","taskLenght","length","userTasksLenght","userServise","useEffect","getUserData","ProgressBar","diploma","Register","email","setEmail","password1","setPassword1","password2","setPassword2","firstname","setFirstName","lastname","setLastName","handleRegister","userService","ImageGallery","images","display","minHeight","border","overflow","App","setTasks","setNotes","setImages","imageService","taskService","getData","getImages","getFunction","handleLogout","enevt","removeItem","handleNotesChange","ReactGA","initialize","pageview","location","pathname","search","Navbar","collapseOnSelect","expand","bg","Toggle","Collapse","Nav","Link","to","path","Task","ReactDOM","render","document","getElementById"],"mappings":"iPACMA,EAAU,aAEZC,EAAQ,KAUNC,EAAM,iDAAG,WAAMC,GAAS,mFAG3B,OAFKC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAC3B,SAEsBM,IAAMC,KAAKR,EAASG,EAAWC,GAAO,OAA/C,OAARK,EAAQ,yBACPA,EAASC,MAAI,2CACrB,gBAPW,sCASNC,EAAM,iDAAG,WAAOC,EAAIT,GAAS,mFAGhC,OAFKC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAC3B,SACsBM,IAAMM,IAAI,GAAD,OAAIb,EAAO,YAAIY,GAAMT,EAAWC,GAAO,OAAzD,OAARK,EAAQ,yBACPA,EAASC,MAAI,2CACrB,gBANW,wCAQNI,EAAU,iDAAG,WAAOF,GAAE,mFAGzB,OAFKR,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAC3B,SACsBM,IAAMQ,OAAO,GAAD,OAAIf,EAAO,YAAIY,GAAMR,GAAO,OAAjD,OAARK,EAAQ,yBACPA,EAASC,MAAI,2CACrB,gBANe,sCAQD,GAACM,OA9BD,WAEb,OADgBT,IAAMU,IAAIjB,GACXkB,MAAK,SAAAT,GAAQ,OAAIA,EAASC,IAAI,GAC/C,EA2BwBR,SAAQiB,SAlCf,SAAAC,GACfnB,EAAK,iBAAamB,EACpB,EAgC0CT,SAAQG,c,+DCbnCO,I,wBCvBAd,MAAML,OAAO,CAC1BoB,QAAS,wBACTjB,QAAS,CACP,eAAgB,sBCYL,MAfS,4CAYrB,OAZqB,mCACtB,SAAOkB,EAAMC,EAAMC,GACjB,IAAIC,EAAW,IAAIC,SAInB,OAFAD,EAASE,OAAO,OAAQL,GACxBG,EAASE,OAAO,OAAQJ,GACjBK,EAAKrB,KAAK,sDAAuDkB,EAAU,CAChFrB,QAAS,CACP,eAAgB,uBAElBoB,kBAEJ,KAAC,EAZqB,ICGHK,EAAW,kDAC9B,WAAYC,GAAQ,IAAD,EAWf,OAXe,qBACjB,cAAMA,IACDC,WAAa,EAAKA,WAAWC,KAAK,gBACvC,EAAKC,OAAS,EAAKA,OAAOD,KAAK,gBAC/B,EAAKE,MAAQ,CACXC,mBAAeC,EACfC,iBAAaD,EACbE,SAAU,EACVC,QAAS,6BAETC,UAAW,IACX,CACJ,CAwFC,OAxFA,uCAED,SAAWC,GACTC,KAAKC,SAAS,CACZR,cAAeM,EAAMG,OAAOC,OAEhC,GAAC,oBAED,WAAU,IAAD,OACHR,EAAcK,KAAKR,MAAMC,cAAc,GAE3CO,KAAKC,SAAS,CACZL,SAAU,EACVD,YAAaA,IAGfS,EAAcb,OAAOI,EAAaK,KAAKZ,MAAMP,MAAM,SAACkB,GAClD,EAAKE,SAAS,CACZL,SAAUS,KAAKC,MAAO,IAAMP,EAAMQ,OAAUR,EAAMS,QAEtD,IACGjC,MAAK,SAACT,GAIL,OAHA,EAAKmC,SAAS,CACZJ,QAAS/B,EAASC,KAAK8B,UAElBO,EAAcK,UACvB,IACClC,MAAK,SAAC4B,GACL,EAAKF,SAAS,CACZH,UAAWK,EAAMpC,MAErB,IACC2C,OAAM,WACL,EAAKT,SAAS,CACZL,SAAU,EACVC,QAAS,gBACTF,iBAAaD,GAEjB,IAEFM,KAAKC,SAAS,CACZR,mBAAeC,GAEnB,GAAC,oBAED,WACE,MAMIM,KAAKR,MALPC,EAAa,EAAbA,cACAE,EAAW,EAAXA,YACAC,EAAQ,EAARA,SACAC,EAAO,EAAPA,QACS,EAATC,UAGF,OACE,gCACGH,GACC,qBAAKgB,UAAU,WAAU,SACvB,sBACEA,UAAU,sDACVC,KAAK,cACL,gBAAehB,EACf,gBAAc,IACd,gBAAc,MACdiB,MAAO,CAAEC,MAAOlB,EAAW,KAAM,UAEhCA,EAAQ,SAKf,uBAAOe,UAAU,kBAAiB,SAChC,uBAAOI,KAAK,OAAOC,SAAUhB,KAAKX,eAGpC,wBACEsB,UAAU,kBACVM,UAAWxB,EACXyB,QAASlB,KAAKT,OAAO,mBAKvB,qBAAKoB,UAAU,oBAAoBC,KAAK,QAAO,SAC5Cf,MAIT,KAAC,EArG6B,CAASsB,aCOzC,SAASC,EAAa,GAAO,EAANC,OAAsC,IAA/BC,EAAI,EAAJA,KAAKC,EAAgB,EAAhBA,iBAAiBC,EAAK,EAALA,MAClD,EAAwBC,oBAAS,GAAM,mBAAhCC,EAAI,KAAEC,EAAO,KACdC,EAAaN,EAAK,GACxB,EAAsBG,mBAASG,EAAWC,KAAI,mBAAvCA,EAAG,KAAEC,EAAM,KAEZC,EAAc,WAAH,OAASJ,GAAQ,EAAO,EAInCK,EAAc,iDAAG,WAAOjC,GAAK,mFACsC,OAAjEkC,EAAiBC,OAAOC,aAAaC,QAAQ,qBAAoB,SACjDC,KAAKC,MAAML,GAAe,OACb,OAD7BM,EAAO,OACbC,EAAYhE,SAAS+D,EAAQjF,OAAM,SAETkF,EAAYxE,OAAO4D,EAAW3D,GAAG,CACzD4D,IAAKA,IACL,OAFe,OAGjBE,IACAD,EAAO,IAAG,4CAEX,gBAXmB,sCAadW,EAAY,iDAAG,gGACoD,OAAjER,EAAiBC,OAAOC,aAAaC,QAAQ,qBAAoB,SACjDC,KAAKC,MAAML,GAAe,OAA1CM,EAAO,OACbC,EAAYhE,SAAS+D,EAAQjF,OAC7BkF,EAAYrE,WAAWyD,EAAW3D,IAClCsD,IACAQ,IAAa,2CAEd,kBARiB,mCAYlB,OACE,qCACE,cAACW,EAAA,EAAM,CAACC,QAAQ,UAAUzB,QA9BX,WAAH,OAASS,GAAQ,EAAM,EA8BW,gCAI9C,eAACiB,EAAA,EAAK,CAAClB,KAAMA,EAAMmB,OAAQd,EAAY,UACrC,cAACa,EAAA,EAAME,OAAM,CAACC,aAAW,WACvB,cAACH,EAAA,EAAMI,MAAK,UAAExB,MAEhB,eAACoB,EAAA,EAAMK,KAAI,WACT,cAACC,EAAA,EAAG,UACF,eAACC,EAAA,EAAKC,MAAK,CAACC,UAAU,+BAA8B,UAClD,cAACF,EAAA,EAAKG,MAAK,qBACX,cAACH,EAAA,EAAKI,QAAO,CAACC,GAAG,WAAWC,KAAM,EAAGzC,SAhBzB,SAAC0C,GAAC,OAAK5B,EAAO4B,EAAExD,OAAOyD,MAAM,EAgBuBA,MAAO9B,EAAK+B,YAAY,gBAI5F,cAACV,EAAA,EAAG,UACF,cAACR,EAAA,EAAM,CAACC,QAAQ,SAASzB,QAASuB,EAAa,kCAMnD,eAACG,EAAA,EAAMiB,OAAM,WACX,cAACnB,EAAA,EAAM,CAACC,QAAQ,YAAYzB,QAASa,EAAY,qBAGjD,cAACW,EAAA,EAAM,CAACC,QAAQ,UAAUzB,QAASc,EAAe,8BAQ5D,CAGA,SAAS8B,EAAY,GAAuC,IAAtCzC,EAAM,EAANA,OAAOE,EAAgB,EAAhBA,iBAAiB1C,EAAI,EAAJA,KAAK2C,EAAK,EAALA,MACjD,EAAwBC,oBAAS,GAAM,mBAAhCC,EAAI,KAAEC,EAAO,KACpB,EAAsBF,mBAAS,IAAG,mBAA3BI,EAAG,KAAEC,EAAM,KAClB,EAAgDL,oBAAS,GAAM,mBAAxDsC,EAAgB,KAAEC,EAAmB,KAEtCjC,EAAc,WAAH,OAASJ,GAAQ,EAAO,EAGnCsC,EAAa,iDAAG,WAAOlE,GAAK,mFACuC,OAAjEkC,EAAiBC,OAAOC,aAAaC,QAAQ,qBAAoB,SACjDC,KAAKC,MAAML,GAAe,OACb,OAD7BM,EAAO,OACbC,EAAYhE,SAAS+D,EAAQjF,OAAM,SAChBkF,EAAYjF,OAAO,CACpC2G,KAAM7C,EACNxC,KAAM0D,EAAQ4B,SACdtC,IAAKA,EACLkC,iBAAkBA,IAElB,OANQ,OAOVxC,IACAyC,GAAoB,GACpBjC,IAAa,4CACd,gBAdkB,sCAoBnB,OACE,qCACE,cAACW,EAAA,EAAM,CAACC,QAAQ,UAAUzB,QAxBX,WAAH,OAASS,GAAQ,EAAM,EAwBW,kCAI9C,eAACiB,EAAA,EAAK,CAAClB,KAAMA,EAAMmB,OAAQd,EAAY,UACrC,cAACa,EAAA,EAAME,OAAM,CAACC,aAAW,WACvB,cAACH,EAAA,EAAMI,MAAK,UAAExB,MAEhB,cAACoB,EAAA,EAAMK,KAAI,UACT,eAACC,EAAA,EAAG,WACJ,cAACC,EAAA,EAAKG,MAAK,oDACT,qBAAK3C,UAAU,YAAYE,MAAO,CAAEC,MAAO,OAAQ,SACjD,cAAC,EAAW,CAACjC,KAAMA,MAErB,cAACsE,EAAA,EAAKC,MAAK,CAACC,UAAU,+BAA8B,SAClD,cAACF,EAAA,EAAKI,QAAO,CAACC,GAAG,WAAWC,KAAM,EAAGzC,SArBzB,SAAC0C,GAAC,OAAK5B,EAAO4B,EAAExD,OAAOyD,MAAM,EAqBuBA,MAAO9B,EAAK+B,YAAY,aAE1F,cAACT,EAAA,EAAKC,MAAK,CAACnF,GAAG,mBAAkB,SAC/B,cAACkF,EAAA,EAAKiB,MAAK,CAACrD,KAAK,WAAWsD,MAAM,yCAA0CrD,SAtB9D,SAAC0C,GAAC,OAAKM,EAAoBN,EAAExD,OAAOoE,QAAQ,WA2BhE,eAAC1B,EAAA,EAAMiB,OAAM,WACX,cAACnB,EAAA,EAAM,CAACC,QAAQ,YAAYzB,QAASa,EAAY,qBAGjD,cAACW,EAAA,EAAM,CAACC,QAAQ,UAAUzB,QAAS+C,EAAc,8BAO3D,CAAC,SAEcM,IAAQ,4CAQtB,OARsB,kCAAvB,oGACyE,KAAjEtC,EAAiBC,OAAOC,aAAaC,QAAQ,sBAChC,CAAD,gCACMC,KAAKC,MAAML,GAAe,OAAnC,OAAPM,EAAO,gBACOC,EAAYnE,SAAQ,OAA7B,OAALmG,EAAK,iBACSA,EAAMC,QAAO,SAAAnD,GAAI,OAAIA,EAAKzC,KAAKsF,WAAa5B,EAAQ4B,QAAQ,IAAC,QAAtE,OAALO,EAAK,yBACJA,GAAK,6CAEf,sB,4BCzJKC,G,OAAc,MACdC,EAAa,MAEbC,EAAa,CACjBC,WAAW,EACXC,KAAM,IACNC,YAAa,GAGTC,EAAa,SAACC,EAAWC,GAC7B,OACE,sBAAKxE,UAAU,eAAc,UAC3B,qBAAKA,UAAU,OAAM,SAAEwE,IACvB,8BAAMD,MAGZ,EAQe,SAASE,IACtB,IAGMC,EAFU,WADEC,KAAKC,MAAQ,IAKzBC,EADOnF,KAAKoF,KAAKJ,EAAgBT,GACXA,EAE5B,OACE,sBAAKjE,UAAU,QAAO,UACpB,cAAC,uBAAoB,2BACfkE,GAAU,IACda,OAAQ,CAAC,CAAC,YACVC,SAAUH,EACVI,qBAAsBP,EAAc,SAEnC,gBAAGQ,EAAW,EAAXA,YAAW,OACbZ,EAAW,mBAAsBO,EAAeK,GAnBpBjB,EAAc,EAmBmB,KAGjE,cAAC,uBAAoB,2BACfC,GAAU,IACda,OAAQ,CAAC,CAAC,YACVC,SAAUf,EACVgB,qBAAsBP,EAAgBT,EACtCkB,WAAY,SAACC,GAAgB,MAAK,CAChCV,EAAgBU,EAAmBpB,EACpC,EAAC,SAED,gBAAGkB,EAAW,EAAXA,YAAW,OACbZ,EAAW,UAAuBL,EAAaiB,GAjCjBjB,EAAcD,EAAe,EAiCC,KAGhE,cAAC,uBAAoB,2BACfE,GAAU,IACda,OAAQ,CAAC,CAAC,YACVC,SAAUhB,EACViB,qBAAsBP,EAAgBV,EACtCmB,WAAY,SAACC,GAAgB,MAAK,CAChCV,EAAgBU,EAhEJ,GAiEb,EAAC,SAED,gBAAGF,EAAW,EAAXA,YAAW,OACbZ,EAAW,YAA2BN,EAAckB,GA/CpBlB,EArBpB,GAqBoD,EA+CC,KAGrE,qBAAKhE,UAAU,WAAU,SACzB,cAAC,uBAAoB,2BACfkE,GAAU,IACda,OAAQ,CAAC,CAAC,YACVC,SA3Ec,GA4EdC,qBAAsBP,EA5ER,GA6EdS,WAAY,SAACC,GAAgB,MAAK,CAChCV,EAAgBU,EAAmB,EACpC,EAAC,SAED,gBAAGF,EAAW,EAAXA,YAAW,OACbZ,EAAW,WAlFC,GAkF0BY,EA9DU,EA8DG,SAM7D,CC5FA,IAYeG,EAZM,SAAH,GAAmB,IAAdnG,EAAO,EAAPA,QACrB,OAAgB,OAAZA,EACK,KAIP,qBAAKc,UAAU,QAAO,SACnBd,GAGP,E,eC6EeoG,EA9ED,SAAH,GAA6C,IAAxCC,EAAK,EAALA,MAAM1B,EAAK,EAALA,MAAM3F,EAAI,EAAJA,KAAK0C,EAAgB,EAAhBA,iBACzB4E,EAAU3B,EAAM4B,KAAI,SAAA9E,GAAI,OAAIA,EAAK4C,IAAI,IAC3C,EAAwCzC,mBAAS,MAAK,mBAA/C4E,EAAY,KAGbC,GAH8B,KAGvB,SAAH,OAAK9E,EAAK,EAALA,MAAO+E,EAAW,EAAXA,YAAW,OAC/B,cAACC,EAAA,EAAc,CAACC,QAAQ,QAAQC,UAAU,QAAQC,QAChD,eAACC,EAAA,EAAO,CAAC3I,GAAG,gBAAe,UAC3B,cAAC2I,EAAA,EAAQ5D,MAAK,CAACQ,GAAG,KAAI,SAAEhC,IACxB,cAACoF,EAAA,EAAQC,QAAO,UACfN,OAGF,SACC,cAAC7D,EAAA,EAAM,CAACC,QAAQ,OAAM,SACtB,cAAC,IAAYmE,SAAQ,CAAEnD,MAAO,CAAE9C,MAAO,CAACkG,SAAU,OAAQC,MAAO,iBAAiB,SAChF,cAAC,IAAwB,SAIZ,GAGnB,OACA,sBAAKrG,UAAU,OAAM,UACnB,gDACA,cAAC,EAAY,CAACd,QAASwG,IACvB,uBACA,sDACA,cAACjB,EAAK,IACN,uBACA,eAAC6B,EAAA,EAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,YAC3B,gCACE,+BACGvI,EAAO,6CAAuB,GAC/B,+CAECA,EAAO,0CAAoB,QAGhC,gCAEGqH,EAAME,KAAI,SAAAlC,GAAI,OACb,+BACGrF,EACD,6BAEGsH,EAAQkB,SAASnD,EAAKjG,IACrB,cAACqJ,EAAA,EAAK,CAACC,MAAI,EAAC5E,QAAQ,UAAS,wBAC7B,cAAC2E,EAAA,EAAK,CAACC,MAAI,EAAC5E,QAAQ,OAAM,6BAEtB,GAER,+BACA,cAAC2D,EAAI,CAAC9E,MAAO0C,EAAK1C,MAAO+E,YAAarC,EAAKqC,cAC1CrC,EAAK1C,SAML3C,EACD,6BACGsH,EAAQkB,SAASnD,EAAKjG,IACrB,cAACmD,EAAY,CAACC,OAAQ6C,EAAKjG,GAAIsD,iBAAkBA,EAAkBC,MAAO0C,EAAK1C,MAAOF,KAAMkD,EAAMC,QAAO,SAASnD,GAClH,OAAOA,EAAK4C,MAAQA,EAAKjG,EAC3B,MACE,cAAC6F,EAAW,CAACzC,OAAQ6C,EAAKjG,GAAIsD,iBAAkBA,EAAkB1C,KAAMA,EAAM2C,MAAO0C,EAAK1C,UAEtF,KA1BD0C,EAAKjG,GA2BT,WAMf,E,QCpFMuJ,EAAK,iDAAG,WAAMC,GAAW,iGACN7J,IAAMC,KAHf,aAG6B4J,GAAY,OAAzC,OAAR3J,EAAQ,yBACPA,EAASC,MAAI,2CACrB,gBAHU,sCAKI,GAAEyJ,SCwDFE,EAvDD,SAACtI,GACb,IAAMuI,EAAUC,cAEhB,EAAgCnG,mBAAS,IAAG,mBAArC0C,EAAQ,KAAE0D,EAAW,KAC5B,EAAgCpG,mBAAS,IAAG,mBAArCqG,EAAQ,KAAEC,EAAW,KAC5B,EAAwBtG,mBAAS,MAAK,mBAAzBuG,GAAF,KAAS,MACpB,EAAwCvG,mBAAS,MAAK,mBAA/C4E,EAAY,KAAE4B,EAAe,KAK9BC,EAAW,iDAAG,WAAOnI,GAAK,iFACR,OAAtBA,EAAMoI,iBAAgB,kBAEDC,EAAaZ,MAAM,CACpCrD,WAAU2D,aACV,OAFIjJ,EAAI,OAGVqD,OAAOC,aAAakG,QAClB,oBAAqBhG,KAAKiG,UAAUzJ,IAEtCmJ,EAAQnJ,GACRgJ,EAAY,IACZE,EAAY,IACZ3I,EAAMmJ,QAAQpE,GACdwD,EAAQa,KAAK,KAAI,kDAEjBP,EAAgB,uDAChBQ,YAAW,WACTR,EAAgB,KAClB,GAAG,KAAK,0DAEX,gBApBgB,sCAwBjB,OACE,gCACE,cAAC,EAAY,CAACpI,QAASwG,IACvB,uBAAM1F,UAAU,YAAY+H,SAAUR,EAAY,UAChD,sBAAKvH,UAAU,aAAY,UACzB,0DACA,uBAAOI,KAAK,OAAO4H,aAAa,WAAWhI,UAAU,eAAegD,MAAOQ,EAAUnD,SAAU,gBAAGd,EAAM,EAANA,OAAM,OAAO2H,EAAY3H,EAAOyD,MAAM,EAAEC,YAAY,6BAExJ,sBAAKjD,UAAU,aAAY,UACzB,6CACA,uBAAOI,KAAK,WAAW4H,aAAa,mBAAmBhI,UAAU,eAAegD,MAAOmE,EAAU9G,SAAU,gBAAGd,EAAM,EAANA,OAAM,OAAO6H,EAAY7H,EAAOyD,MAAM,EAAEC,YAAY,gBAEpK,wBAAQ7C,KAAK,SAASJ,UAAU,kBAAiB,yBAEnD,qBAAKA,UAAU,qBACf,mBAAGA,UAAU,gBAAgBiI,KAAK,YAAW,SAAC,4EAGpD,E,SCnBeC,EAtCF,WAAH,OACR,sBAAKlI,UAAU,OAAM,UACnB,cAACmI,EAAA,EAAK,CAAEnG,QAAQ,SAAQ,qDAGxB,qEACA,0MAEA,8BAAG,8CAAoB,0BAEvB,8BAAG,oDAA0B,qBAE7B,4CACA,+BACE,yIACA,wIAEF,iDACE,sNAEF,mDACE,qOAEF,wDACA,+BACE,gFACA,+EAAwC,mBAAGiG,KAAK,oDAAmD,4BACnG,2GAA2D,mBAAGA,KAAK,iDAAgD,wCACnH,yJAEF,0CACA,yGACA,+CACA,yFAAkD,mBAAGA,KAAK,yBAAwB,kCAE9E,E,SCvCFvL,GAAU,aAEV0L,GAAQ,iDAAG,WAAMvL,GAAS,iGACPI,IAAMC,KAAKR,GAAQG,GAAU,OAAtC,OAARM,EAAQ,yBACPA,EAASC,MAAI,2CACrB,gBAHa,sCAIRiL,GAAQ,iDAAG,WAAMnK,GAAI,mGACFjB,IAAMU,IAAIjB,IAAQ,OACwC,OAD3ES,EAAQ,OACRmL,EAAWnL,EAASC,KAAK0G,QAAO,SAAAyE,GAAK,OAAIA,EAAM/E,WAAatF,EAAKsF,QAAQ,IAAE,kBAE1E8E,GAAQ,2CAChB,gBALa,sCAOC,IAACF,YAAUC,aC6DXG,GAtEF,SAAH,GAA6C,IAAxCjD,EAAK,EAALA,MAAMrH,EAAI,EAAJA,KAAK2F,EAAK,EAALA,MAAMjD,EAAgB,EAAhBA,iBAC9B,EAAgCE,mBAAS,IAAG,mBAArCuH,EAAQ,KAAEI,EAAW,KACtBjD,EAAU3B,EAAM4B,KAAI,SAAA9E,GAAI,OAAIA,EAAK4C,IAAI,IACrCmF,EAAYnD,EAAMzB,QAAO,SAAAP,GAAI,OAAIiC,EAAQkB,SAASnD,EAAKjG,GAAG,IAC1DqL,EAAapD,EAAMqD,OACnBC,EAAkBH,EAAUE,OACR,aAGzB,OAHyB,kCAA1B,8GACyBE,GAAYT,SAAS,CAAC7E,SAAStF,IAAM,OAAtDoK,EAAQ,OACdG,EAAYH,EAAS,IAAG,4CACzB,sBAKD,OAJAS,qBAAW,YAL6B,WACd,wBAKxBC,EACF,GAAE,IAGF,sBAAKhJ,UAAU,WAAU,UACvB,4CACA,cAACiJ,EAAA,EAAW,CAACrE,IAAKiE,EAAgBF,EAAW,MAC7C,4CAAeE,EAAe,IAAGF,EAAU,wBAC1CA,GAAcE,EACf,8BACuB,IAApBR,EAASa,QACR,8BACE,wEAAoC,cAACvC,EAAA,EAAK,CAAC3E,QAAQ,OAAM,iCAG3D,gCACE,wEAAoC,cAAC2E,EAAA,EAAK,CAAC3E,QAAQ,UAAS,4BAC5D,gFAA4C,mBAAGhC,UAAU,kBAAkBiI,KAAMI,EAASa,QAAS3J,OAAO,SAAQ,mCAMtH,GAEDsJ,GAAiB,EAClB,gCACE,6CACF,eAACvC,EAAA,EAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,YAC3B,gCACE,+BACE,+CACA,+CAGJ,gCAEGiC,EAAUjD,KAAI,SAAAlC,GAAI,OACjB,+BACE,6BACGA,EAAK1C,QAER,6BACG2E,EAAQkB,SAASnD,EAAKjG,IACrB,cAACmD,EAAY,CAACC,OAAQ6C,EAAKjG,GAAIsD,iBAAkBA,EAAkBD,KAAMkD,EAAMC,QAAO,SAASnD,GAC/F,OAAOA,EAAK4C,MAAQA,EAAKjG,EAC3B,MACE,OATGiG,EAAKjG,GAWT,YAKT,iDAGN,ECGe6L,GAnEE,SAAC1K,GAChB,IAAMuI,EAAUC,cAChB,EAAgCnG,mBAAS,IAAG,mBAArC0C,EAAQ,KAAE0D,EAAW,KAC5B,EAA0BpG,mBAAS,IAAG,mBAA/BsI,EAAK,KAAEC,EAAQ,KACtB,EAAkCvI,mBAAS,IAAG,mBAAvCwI,EAAS,KAAEC,EAAY,KAC9B,EAAkCzI,mBAAS,IAAG,mBAAvC0I,EAAS,KAAEC,EAAY,KAC9B,EAAkC3I,mBAAS,IAAG,mBAAvC4I,EAAS,KAAEC,EAAY,KAC9B,EAAgC7I,mBAAS,IAAG,mBAArC8I,EAAQ,KAAEC,EAAW,KAC5B,EAAwC/I,mBAAS,MAAK,mBAA/C4E,EAAY,KAAE4B,EAAe,KAE9BwC,EAAc,iDAAG,WAAO1K,GAAK,2EACX,GAAtBA,EAAMoI,iBAGF8B,IAAcE,EAAS,0CAENO,GAAY3B,SAAS,CACtC5E,SAAUA,EACVkG,UAAWA,EACXE,SAAUA,EACVR,MAAOA,EACPjC,SAAUmC,IACV,OANQ,OAOVtC,EAAQa,KAAK,UAAS,gDAEpBzI,EAAMoI,iBACNF,EAAgB,SAAQ,gCAI1BA,EAAgB,sCAChBlI,EAAMoI,iBAAgB,yDAE3B,gBAvBqB,sCAyBpB,OACE,gCACE,cAAC,EAAY,CAACtI,QAASwG,IACvB,uBAAM1F,UAAU,YAAY+H,SAAU+B,EAAe,UACnD,sBAAK9J,UAAU,aAAY,UACzB,0DACA,uBAAOI,KAAK,OAAOJ,UAAU,eAAegD,MAAOQ,EAAUnD,SAAU,gBAAGd,EAAM,EAANA,OAAM,OAAO2H,EAAY3H,EAAOyD,MAAM,EAAEC,YAAY,6BAEhI,sBAAKjD,UAAU,aAAY,UACzB,4CACA,uBAAOI,KAAK,OAAOJ,UAAU,eAAegD,MAAO0G,EAAWrJ,SAAU,gBAAGd,EAAM,EAANA,OAAM,OAAOoK,EAAapK,EAAOyD,MAAM,EAAEC,YAAY,YAChI,6CACA,uBAAO7C,KAAK,OAAOJ,UAAU,eAAegD,MAAO4G,EAAUvJ,SAAU,gBAAGd,EAAM,EAANA,OAAM,OAAOsK,EAAYtK,EAAOyD,MAAM,EAAEC,YAAY,gBAEhI,sBAAKjD,UAAU,aAAY,UACzB,qDACA,uBAAOI,KAAK,QAAQJ,UAAU,eAAegD,MAAOoG,EAAO/I,SAAU,gBAAGd,EAAM,EAANA,OAAM,OAAO8J,EAAS9J,EAAOyD,MAAM,EAAEC,YAAY,wBAE3H,sBAAKjD,UAAU,aAAY,UACzB,6CACA,uBAAOI,KAAK,WAAW4H,aAAa,eAAehI,UAAU,eAAegD,MAAOsG,EAAWjJ,SAAU,gBAAGd,EAAM,EAANA,OAAM,OAAOgK,EAAahK,EAAOyD,MAAM,EAAEC,YAAY,gBAElK,sBAAKjD,UAAU,aAAY,UACzB,sDACA,uBAAOI,KAAK,WAAW4H,aAAa,eAAehI,UAAU,eAAegD,MAAOwG,EAAWnJ,SAAU,gBAAGd,EAAM,EAANA,OAAM,OAAOkK,EAAalK,EAAOyD,MAAM,EAAEC,YAAY,yBAElK,wBAAQ7C,KAAK,SAASJ,UAAU,kBAAiB,kCAIzD,ECxDegK,GAfM,SAAH,GAAW,EAANC,OAErB,OACE,8BACE,qBAAK/J,MAAO,CACEgK,QAAS,QACTC,UAAW,MACXhK,MAAO,OACPiK,OAAQ,iBACRC,SAAU,WAI9B,ECFe,GANA,WAEb,OADgBpN,IAAMU,IARR,cASCC,MAAK,SAAAT,GAAQ,OAAIA,EAASC,IAAI,GAC/C,ECHe,GALA,WAEb,OADgBH,IAAMU,IAHR,eAICC,MAAK,SAAAT,GAAQ,OAAIA,EAASC,IAAI,GAC/C,E,0DCwBMkN,GAAM,WACV,MAA0BxJ,mBAAS,IAAG,mBAA/ByE,EAAK,KAAEgF,EAAQ,KACtB,EAAwBzJ,mBAAS,MAAK,mBAA/B5C,EAAI,KAAEmJ,EAAO,KACpB,EAA0BvG,mBAAS,IAAG,mBAA/B+C,EAAK,KAAE2G,EAAQ,KACtB,EAA4B1J,mBAAS,IAAG,mBAAjCmJ,EAAM,KAAEQ,EAAS,KAEA,aAGvB,OAHuB,kCAAxB,8GACuBC,KAAqB,OAApCT,EAAM,OACZQ,EAAUR,GAAO,2CAClB,wBAEyB,aAGzB,OAHyB,kCAA1B,8GACsBU,KAAoB,OAAlCpF,EAAK,OACXgF,EAAUhF,GAAO,2CAClB,iCACcqF,IAAO,4CAQrB,OARqB,kCAAtB,kGACyE,KAAjEtJ,EAAiBC,OAAOC,aAAaC,QAAQ,sBAChC,CAAD,gCACMC,KAAKC,MAAML,GAAe,OACvB,OADnBM,EAAO,OACbyF,EAAQzF,EAAQ4B,UAAS,SACPI,IAAU,OAAxBC,EAAK,OACX2G,EAAS3G,GAAM,6CAEhB,sBACDkF,qBAAW,YApB6B,WAEhB,wBAmBtB8B,EACF,GAAE,IAEF9B,qBAAW,YAnBV,WAEyB,wBAkBxB+B,EACF,GAAG,IAEH/B,qBAAU,WACR6B,GACF,GAAG,IAEH,IASMG,EAAe,SAACC,GACpBzJ,OAAOC,aAAayJ,WAAW,qBAC/B5D,EAAQ,MACRmD,EAAS,GACX,EAEMU,EAAiB,iDAAG,WAAO9L,GAAK,2EACpCwL,IAAS,2CACV,gBAFsB,sCAYvB,OAJAO,KAAQC,WAAW,kBACnBD,KAAQE,SAAS9J,OAAO+J,SAASC,SAAWhK,OAAO+J,SAASE,QAI1D,gCACE,eAACC,GAAA,EAAM,CAACC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAO5J,QAAQ,OAAM,UAC3D,cAACyJ,GAAA,EAAOI,OAAM,CAAC,gBAAc,0BAC7B,cAACJ,GAAA,EAAOK,SAAQ,CAACxO,GAAG,wBAAuB,SACzC,eAACyO,GAAA,EAAG,CAAC/L,UAAU,UAAS,UACtB,cAAC+L,GAAA,EAAIC,KAAI,CAAC/D,KAAK,IAAIpF,GAAG,OAAM,SAC1B,cAAC,KAAI,CAACoJ,GAAG,IAAIjM,UAAU,OAAM,uBAE/B,cAAC+L,GAAA,EAAIC,KAAI,CAAC/D,KAAK,IAAIpF,GAAG,OAAM,SAC1B,cAAC,KAAI,CAACoJ,GAAG,SAASjM,UAAU,OAAM,8BAEpC,cAAC+L,GAAA,EAAIC,KAAI,CAAC/D,KAAK,IAAIpF,GAAG,OAAM,SAC1B,cAAC,KAAI,CAACoJ,GAAG,QAAQjM,UAAU,OAAM,wBAEnC,cAAC+L,GAAA,EAAIC,KAAI,CAAC/D,KAAK,IAAIpF,GAAG,OAAM,SAC1B,cAAC,KAAI,CAACoJ,GAAG,WAAWjM,UAAU,OAAM,wBAEtC,cAAC+L,GAAA,EAAIC,KAAI,CAAC/D,KAAK,QAAQpF,GAAG,OAAM,SAC7B3E,EACG,+BAAKA,EAAI,gBA3BvB,wBAAQqC,QAASwK,EAAa,8BA4BhB,cAAC,KAAI,CAACkB,GAAG,SAASjM,UAAU,OAAM,gCAQ9C,eAAC,IAAM,WAEL,cAAC,IAAK,CAACkM,KAAK,SAAQ,SAClB,cAACC,EAAI,CAAC5G,MAAOA,EAAOrH,KAAMA,EAAM2F,MAAOA,EAAOjD,iBAAkBsK,MAElE,cAAC,IAAK,CAACgB,KAAK,QAAO,SAChBhO,EAAO,cAAC,GAAI,CAAC2F,MAAOA,EAAOjD,iBAAkBsK,EAAmBhN,KAAMA,EAAMqH,MAAOA,IAAW,cAAC,IAAQ,CAAC0G,GAAG,aAE9G,cAAC,IAAK,CAACC,KAAK,SAAQ,SAClB,cAAC,EAAK,CAACtE,QAjED,SAAC1J,GACb0M,IACAvD,EAAQnJ,EACV,MAgEM,cAAC,IAAK,CAACgO,KAAK,YAAW,SACrB,cAAC,GAAQ,MAEX,cAAC,IAAK,CAACA,KAAK,WAAU,SACpB,cAAC,GAAY,CAACjC,OAAQA,MAExB,cAAC,IAAK,CAACiC,KAAK,IAAG,SACb,cAAC,EAAI,SAIT,8BACE,2BAKR,EAEAE,KAASC,OACP,cAAC,KAAM,UACL,cAAC,GAAG,MAENC,SAASC,eAAe,Q","file":"static/js/main.7ed70d1d.chunk.js","sourcesContent":["import axios from \"axios\"\r\nconst baseUrl = '/api/notes'\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst deleteNote = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default {getAll, create, setToken, update, deleteNote }","import React, { useRef } from \"react\";\r\nimport S3 from \"react-aws-s3\";\r\nimport uploadServise from '../services/uploads'\r\n\r\nfunction Upload(taskId) {\r\n  const fileInput = useRef();\r\n  const handleClick = async (event) => {\r\n    event.preventDefault();\r\n    const u = await uploadServise.create(fileInput)\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <form className='upload-steps' onSubmit={handleClick}>\r\n        <label>\r\n          Upload file:\r\n          <input type='file' ref={fileInput} />\r\n        </label>\r\n        <br />\r\n        <button type='submit'>Upload</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:3003\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nclass UploadFilesService {\r\n  upload(file, user, UploadProgress) {\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"file\", file);\r\n    formData.append(\"user\", user)\r\n    return http.post(\"https://aktiivinen-keppari.herokuapp.com/api/upload\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      UploadProgress,\r\n    });\r\n  }\r\n}\r\n\r\nexport default new UploadFilesService();\r\n","// https://github.com/bezkoder/react-file-upload/blob/master/src/components/upload-files.component.js \r\n\r\nimport React, { Component } from \"react\";\r\nimport UploadService from \"../services/upload-files\";\r\n\r\nexport default class UploadFiles extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectFile = this.selectFile.bind(this);\r\n    this.upload = this.upload.bind(this);\r\n    this.state = {\r\n      selectedFiles: undefined,\r\n      currentFile: undefined,\r\n      progress: 0,\r\n      message: \"Muista painaa Lataa nappia\",\r\n\r\n      fileInfos: [],\r\n    };\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.setState({\r\n      selectedFiles: event.target.files,\r\n    });\r\n  }\r\n\r\n  upload() {\r\n    let currentFile = this.state.selectedFiles[0];\r\n\r\n    this.setState({\r\n      progress: 0,\r\n      currentFile: currentFile,\r\n    });\r\n\r\n    UploadService.upload(currentFile, this.props.user, (event) => {\r\n      this.setState({\r\n        progress: Math.round((100 * event.loaded) / event.total),\r\n      });\r\n    })\r\n      .then((response) => {\r\n        this.setState({\r\n          message: response.data.message,\r\n        });\r\n        return UploadService.getFiles();\r\n      })\r\n      .then((files) => {\r\n        this.setState({\r\n          fileInfos: files.data,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          progress: 0,\r\n          message: \"Lataus valmis\",\r\n          currentFile: undefined,\r\n        });\r\n      });\r\n\r\n    this.setState({\r\n      selectedFiles: undefined,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectedFiles,\r\n      currentFile,\r\n      progress,\r\n      message,\r\n      fileInfos,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentFile && (\r\n          <div className=\"progress\">\r\n            <div\r\n              className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n              role=\"progressbar\"\r\n              aria-valuenow={progress}\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              style={{ width: progress + \"%\" }}\r\n            >\r\n              {progress}%\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <label className=\"btn btn-default\">\r\n          <input type=\"file\" onChange={this.selectFile} />\r\n        </label>\r\n\r\n        <button\r\n          className=\"btn btn-success\"\r\n          disabled={!selectedFiles}\r\n          onClick={this.upload}\r\n        >\r\n          Lataa\r\n        </button>\r\n\r\n        <div className=\"alert alert-light\" role=\"alert\">\r\n          {message}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {useCallback, useState} from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport noteService from '../services/notes'\r\nimport Upload from './Upload'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport UploadFiles from \"../components/upload-files\";\r\n\r\nfunction EditNoteForm({taskId,note,handleNoteChange,title}) {\r\n  const [show, setShow] = useState(false);\r\n  const noteToEdit = note[0]\r\n  const [url, setUrl] = useState(noteToEdit.url)\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  \r\n\r\n  const handleEditNote = async (event) => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    const logUser = await JSON.parse(loggedUserJSON)\r\n    noteService.setToken(logUser.token)\r\n\r\n    const updatedNote = await noteService.update(noteToEdit.id,{\r\n      url: url\r\n    })\r\n    handleClose()\r\n    setUrl('')\r\n\r\n  }\r\n  \r\n  const handleDelete = async () => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    const logUser = await JSON.parse(loggedUserJSON)\r\n    noteService.setToken(logUser.token)\r\n    noteService.deleteNote(noteToEdit.id)\r\n    handleNoteChange()\r\n    handleClose()\r\n\r\n  }\r\n\r\n  const handleUrlChange = (e) => setUrl(e.target.value)\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Muokkaa suoritusta\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Col>\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Linkki</Form.Label>\r\n              <Form.Control as=\"textarea\" rows={2} onChange={handleUrlChange} value={url} placeholder=\"linkki\"/>\r\n            </Form.Group>\r\n\r\n          </Col>\r\n          <Col>\r\n            <Button variant=\"danger\" onClick={handleDelete}>\r\n              Poista suoritus\r\n            </Button>\r\n          </Col>\r\n        </Modal.Body>\r\n        \r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Peruuta\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleEditNote}>\r\n            Tallenna\r\n          </Button>\r\n          \r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nfunction NewNoteForm({taskId,handleNoteChange,user,title}) {\r\n  const [show, setShow] = useState(false);\r\n  const [url, setUrl] = useState('')\r\n  const [allowedToPublish, setAllowedToPublish] = useState(false)\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  \r\n  const handleNewNote = async (event) => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    const logUser = await JSON.parse(loggedUserJSON)\r\n    noteService.setToken(logUser.token)\r\n    const note = await noteService.create({\r\n      task: taskId,\r\n      user: logUser.username,\r\n      url: url,\r\n      allowedToPublish: allowedToPublish\r\n\r\n    })\r\n    handleNoteChange()\r\n    setAllowedToPublish(false)\r\n    handleClose()\r\n  }\r\n  \r\n  const handleUrlChange = (e) => setUrl(e.target.value)\r\n\r\n  const handleCheckChange = (e) => setAllowedToPublish(e.target.checked)\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Lisää suoritus\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Col>\r\n          <Form.Label>Lataa tiedosto tai lisää linkki</Form.Label>\r\n            <div className=\"container\" style={{ width: \"300\" }}>\r\n              <UploadFiles user={user}/>\r\n            </div>\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Control as=\"textarea\" rows={2} onChange={handleUrlChange} value={url} placeholder=\"linkki\"/>\r\n            </Form.Group>\r\n            <Form.Group id=\"formGridCheckbox\">\r\n              <Form.Check type=\"checkbox\" label=\"kuvan/videon saa julkaista galleriassa\"  onChange={handleCheckChange}/>\r\n            </Form.Group>\r\n\r\n            </Col>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Peruuta\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleNewNote}>\r\n            Tallenna\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nasync function getNotes() {\r\n  const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n  if (loggedUserJSON) {\r\n    const logUser = await JSON.parse(loggedUserJSON)\r\n    const notes = await noteService.getAll()\r\n    const note2 = await notes.filter(note => note.user.username === logUser.username)\r\n    return note2\r\n  }\r\n}\r\n\r\nexport  {\r\n  EditNoteForm,\r\n  NewNoteForm,\r\n  getNotes\r\n}","// https://codesandbox.io/s/musing-davinci-mqssz?fontsize=14&hidenavigation=1&theme=dark\r\n\r\nimport React from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport '../styles.css'\r\n\r\nconst minuteSeconds = 60;\r\nconst hourSeconds = 3600;\r\nconst daySeconds = 86400;\r\n\r\nconst timerProps = {\r\n  isPlaying: true,\r\n  size: 120,\r\n  strokeWidth: 6\r\n};\r\n\r\nconst renderTime = (dimension, time) => {\r\n  return (\r\n    <div className=\"time-wrapper\">\r\n      <div className=\"time\">{time}</div>\r\n      <div>{dimension}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst getTimeSeconds = (time) => (minuteSeconds - time) | 0;\r\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\r\nconst getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\r\nconst getTimeDays = (time) => (time / daySeconds) | 0;\r\n\r\nexport default function Timer() {\r\n  const stratTime = Date.now() / 1000\r\n  const endTime = 1627765199\r\n\r\n  const remainingTime = endTime - stratTime;\r\n  const days = Math.ceil(remainingTime / daySeconds);\r\n  const daysDuration = days * daySeconds;\r\n\r\n  return (\r\n    <div className=\"Timer\">\r\n      <CountdownCircleTimer\r\n        {...timerProps}\r\n        colors={[[\"#7E2E84\"]]}\r\n        duration={daysDuration}\r\n        initialRemainingTime={remainingTime}\r\n      >\r\n        {({ elapsedTime }) =>\r\n          renderTime(\"päivää\", getTimeDays(daysDuration - elapsedTime))\r\n        }\r\n      </CountdownCircleTimer>\r\n      <CountdownCircleTimer\r\n        {...timerProps}\r\n        colors={[[\"#D14081\"]]}\r\n        duration={daySeconds}\r\n        initialRemainingTime={remainingTime % daySeconds}\r\n        onComplete={(totalElapsedTime) => [\r\n          remainingTime - totalElapsedTime > hourSeconds\r\n        ]}\r\n      >\r\n        {({ elapsedTime }) =>\r\n          renderTime(\"tuntia\", getTimeHours(daySeconds - elapsedTime))\r\n        }\r\n      </CountdownCircleTimer>\r\n      <CountdownCircleTimer\r\n        {...timerProps}\r\n        colors={[[\"#EF798A\"]]}\r\n        duration={hourSeconds}\r\n        initialRemainingTime={remainingTime % hourSeconds}\r\n        onComplete={(totalElapsedTime) => [\r\n          remainingTime - totalElapsedTime > minuteSeconds\r\n        ]}\r\n      >\r\n        {({ elapsedTime }) =>\r\n          renderTime(\"minuutia\", getTimeMinutes(hourSeconds - elapsedTime))\r\n        }\r\n      </CountdownCircleTimer>\r\n      <div className=\"TimerSec\">\r\n      <CountdownCircleTimer \r\n        {...timerProps}\r\n        colors={[[\"#218380\"]]}\r\n        duration={minuteSeconds}\r\n        initialRemainingTime={remainingTime % minuteSeconds}\r\n        onComplete={(totalElapsedTime) => [\r\n          remainingTime - totalElapsedTime > 0\r\n        ]}\r\n      >\r\n        {({ elapsedTime }) =>\r\n          renderTime(\"sekuntia\", getTimeSeconds(elapsedTime))\r\n        }\r\n      </CountdownCircleTimer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, {useState} from 'react'\r\nimport { Table, Button, OverlayTrigger,Tooltip, Image, Popover } from 'react-bootstrap'\r\nimport noteService from '../services/notes'\r\nimport {EditNoteForm, NewNoteForm} from '../components/Note'\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Timer from '../components/Timer'\r\nimport Notification from '../components/Notification'\r\nimport {IconContext} from \"react-icons\"\r\nimport { BsFillQuestionCircleFill } from \"react-icons/bs\";\r\n\r\n\r\nconst Tasks = ({tasks,notes,user,handleNoteChange}) => {\r\n  const notesId = notes.map(note => note.task)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n\r\n  const Info = ({title, description}) => (\r\n    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={\r\n      <Popover id=\"popover-basic\">\r\n      <Popover.Title as=\"h3\">{title}</Popover.Title>\r\n      <Popover.Content>\r\n      {description}\r\n      </Popover.Content>\r\n    </Popover>\r\n    }>\r\n      <Button variant=\"link\">\r\n      <IconContext.Provider  value={{ style: {fontSize: '20px', color: \"rgb(0, 0, 0)\"}}}>\r\n        <BsFillQuestionCircleFill />\r\n    </IconContext.Provider>\r\n      </Button>\r\n      \r\n    </OverlayTrigger>\r\n  );\r\n\r\n  return (\r\n  <div className=\"Task\">\r\n    <h1>Tehtävät</h1>\r\n    <Notification message={errorMessage} />\r\n    <br></br>\r\n    <h2>Aikaa jäljellä</h2>\r\n    <Timer />\r\n    <br></br>\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          {user ? <th>Suoritukset</th> : '' }\r\n          <th>Tehtävä</th>\r\n          {/* <th>Haastavuus</th> */}\r\n          {user ? <th>Muokkaus</th> : '' }\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        \r\n        {tasks.map(task =>\r\n          <tr key={task.id}>\r\n            {user ?\r\n            <td>\r\n              \r\n              {notesId.includes(task.id) \r\n              ? <Badge pill variant=\"success\">Suoritettu</Badge>\r\n              : <Badge pill variant=\"dark\">Ei suoritettu</Badge>\r\n              }\r\n            </td> : '' }\r\n            \r\n            <td>\r\n            <Info title={task.title} description={task.description}/> \r\n            {task.title}\r\n            \r\n            </td>\r\n            {/* <td>\r\n              {task.difficulty}\r\n            </td> */}\r\n            {user ?\r\n            <td>\r\n              {notesId.includes(task.id) \r\n              ? <EditNoteForm taskId={task.id} handleNoteChange={handleNoteChange} title={task.title} note={notes.filter(function(note) {\r\n                return note.task == task.id\r\n              })}/>\r\n              : <NewNoteForm taskId={task.id} handleNoteChange={handleNoteChange} user={user} title={task.title}/> \r\n              }\r\n            </td> : ''}\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </Table>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Tasks","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, {useState, useEffect} from 'react'\r\nimport {\r\n  useHistory\r\n} from \"react-router-dom\"\r\nimport loginService from '../services/login'\r\nimport Notification from '../components/Notification'\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n  const history = useHistory()\r\n\r\n  const [username, setUsername] = useState('') \r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n\r\n  \r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      ) \r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n      props.onLogin(username)\r\n      history.push('/')\r\n    } catch (exception) {\r\n      setErrorMessage('Väärä käyttäjätunnus tai salasana')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={errorMessage} />\r\n      <form className=\"px-4 py-3\" onSubmit={handleLogin}>\r\n        <div className=\"form-group\">\r\n          <label>Käyttäjänimi</label>\r\n          <input type=\"text\" autoComplete=\"username\" className=\"form-control\" value={username} onChange={({ target }) => setUsername(target.value)} placeholder=\"Käyttäjänimi\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label >Salasana</label>\r\n          <input type=\"password\" autoComplete=\"current-password\" className=\"form-control\" value={password} onChange={({ target }) => setPassword(target.value)} placeholder=\"Salasana\"/>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Kirjaudu</button>\r\n      </form>\r\n      <div className=\"dropdown-divider\"></div>\r\n      <a className=\"dropdown-item\" href=\"/register\"><b>Uusi käyttäjä? Rekisteröidy</b></a>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport Upload from '../components/Upload'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\n\r\nconst Home = () => (\r\n  <div className=\"Home\">\r\n    <Alert  variant='danger'>\r\n    Vuoden 2021 kilpailu on päättynyt\r\n  </Alert>\r\n    <h1>Aktiivinen keppari kilpailu jatkuu!</h1>\r\n    <p>Kesän 2021 kilpailussa keppariharrastaja suorittaa tehtäväpassin tehtävät kilpailuaikana. Kaikkien osallistujien kesken arvotaan hyviä esinepalkintoja.</p>\r\n\r\n    <p><b>Kilpailuaika:</b> 5.7.–31.7.2021</p>\r\n\r\n    <p><b>Osallistumisoikeus:</b> Avoin kaikille</p>\r\n\r\n    <h4>Palkinnot:</h4>\r\n    <ol>\r\n      <li>Kaikkien vähintään yhden tehtävän suorittaneiden kesken arvotaan hyvät esinepalkinnot</li>\r\n      <li>Bonuspalkinnot arvotaan niiden kesken, jotka ovat suorittaneet kaikki tehtävät kilpailuaikana</li>\r\n    </ol>\r\n    <h4>Tehtävät:</h4>\r\n      <p>Kilpailussa on helppoja ja vaikeita tehtäviä. Osassa tehtäviä osallistujan tulee lähettää kuva tai video, kun suoritus rekisteröidään kilpailusivuille.</p>\r\n\r\n    <h4>Säännöt:</h4>\r\n      <p>Kilpailussa saa tehdä yhteistyötä tehtävien suorittamisessa. Kilpailussa tulee noudattaa tekijänoikeuksia, joten älä kopioi kuvia tai videoita joihin sinulla ei ole oikeuksia.</p>\r\n\r\n    <b>Ohjeet osallistumiseen:</b>\r\n    <ul>\r\n      <li>Avaa kilpailusivut hewi.fi/aktiivinen-keppari/</li>\r\n      <li>Luo käyttäjätunnus kilpailu sivulle <a href='https://aktiivinen-keppari.herokuapp.com/register'>tästä</a></li>\r\n      <li>Kun olet tehnyt tehtävän, käy rekisteröimässä suoritus <a href='https://aktiivinen-keppari.herokuapp.com/tasks'> Tehtävät sivulle</a></li>\r\n      <li>Kun olet suorittanut kaikki tehtävät, voit ladata todistuksen suorituksestasi pari päivän sisällä </li>\r\n    </ul>\r\n    <h4>Galleria</h4>\r\n    <p>Halutessasi voit lisätä kuvan suorituksestasi julkiseen galleriaan</p>\r\n    <h4>Yhteystiedot:</h4>\r\n    <p>Ongalma tilanteissa ota yhteyttä sähköpostitse <a href='mailto:keppari@hewi.fi'>keppari@hewi.fi</a></p>\r\n    \r\n  </div>\r\n)\r\n\r\nexport default Home","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst register = async newObject => {\r\n  const response = await axios.post(baseUrl,newObject)\r\n  return response.data\r\n}\r\nconst userData = async user => {\r\n  const response = await axios.get(baseUrl)\r\n  const userdata = response.data.filter(users => users.username === user.username )\r\n\r\n  return userdata\r\n}\r\n\r\nexport default {register, userData}","import React, {useState, useEffect} from 'react'\r\nimport { ProgressBar, Table, Badge, Button } from 'react-bootstrap'\r\nimport {EditNoteForm, NewNoteForm} from '../components/Note'\r\nimport userServise from '../services/user'\r\n\r\nconst User = ({tasks,user,notes,handleNoteChange}) => {\r\n  const [userData, setUserData] = useState([])\r\n  const notesId = notes.map(note => note.task)\r\n  const userTasks = tasks.filter(task => notesId.includes(task.id))\r\n  const taskLenght = tasks.length\r\n  const userTasksLenght = userTasks.length\r\n  async function getUserData() {\r\n    const userdata = await userServise.userData({username:user})\r\n    setUserData(userdata[0])\r\n  }\r\n  useEffect( () => {\r\n    getUserData()\r\n  },[])\r\n\r\n  return (\r\n  <div className=\"UserPage\">\r\n    <h1>Omat sivut</h1>\r\n    <ProgressBar now={userTasksLenght/taskLenght*100} />\r\n    <p>suoritettu {userTasksLenght}/{taskLenght} tehtävää</p>\r\n    {taskLenght == userTasksLenght ? \r\n    <div>\r\n      {userData.diploma == '' ?\r\n        <div>\r\n          <p>Olet suorittanut kaikki tehtävät <Badge variant=\"info\">Tarkistuksessa</Badge></p>\r\n        </div> :\r\n\r\n        <div>\r\n          <p>Olet suorittanut kaikki tehtävät <Badge variant=\"success\">Tarkistettu</Badge></p>\r\n          <p>Voit ladata diplomin tämän linkin kautta <a className=\"btn btn-success\" href={userData.diploma} target=\"_blank\">Lataa diplomi</a></p>\r\n          \r\n\r\n        </div>\r\n        }\r\n    </div>\r\n    : ''}\r\n    \r\n    {userTasksLenght>=1 ? \r\n    <div>\r\n      <h3>Suoritukset</h3>\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>Tehtävä</th>\r\n          <th>Muokkaus</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        \r\n        {userTasks.map(task =>\r\n          <tr key={task.id}>\r\n            <td>\r\n              {task.title}\r\n            </td>\r\n            <td>\r\n              {notesId.includes(task.id) \r\n              ? <EditNoteForm taskId={task.id} handleNoteChange={handleNoteChange} note={notes.filter(function(note) {\r\n                return note.task == task.id\r\n              })}/>\r\n              : '' }\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </Table>\r\n    </div>\r\n    : <p>ei suorituksia</p>}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default User","import React, {useState, useEffect} from 'react'\r\nimport userService from '../services/user'\r\nimport Notification from '../components/Notification'\r\nimport { Redirect } from 'react-router'\r\nimport {\r\n  useHistory\r\n} from \"react-router-dom\"\r\n\r\n\r\nconst Register = (props) => {\r\n  const history = useHistory()\r\n  const [username, setUsername] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password1, setPassword1] = useState('')\r\n  const [password2, setPassword2] = useState('')\r\n  const [firstname, setFirstName] = useState('')\r\n  const [lastname, setLastName] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const handleRegister = async (event) => {\r\n    event.preventDefault()\r\n   \r\n\r\n    if (password1 === password2) {\r\n      try {\r\n      const user = await userService.register({\r\n        username: username,\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        email: email,\r\n        password: password1\r\n      })\r\n      history.push('/login')\r\n      } catch (exception) {\r\n        event.preventDefault()\r\n        setErrorMessage('Virhe')\r\n        \r\n      }\r\n    } else {\r\n      setErrorMessage('Salasanat eivät täsmää')\r\n      event.preventDefault()\r\n  } \r\n}\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={errorMessage} />\r\n      <form className=\"px-4 py-3\" onSubmit={handleRegister}>\r\n        <div className=\"form-group\">\r\n          <label>Käyttäjänimi</label>\r\n          <input type=\"text\" className=\"form-control\" value={username} onChange={({ target }) => setUsername(target.value)} placeholder=\"Käyttäjänimi\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Etunimi</label>\r\n          <input type=\"text\" className=\"form-control\" value={firstname} onChange={({ target }) => setFirstName(target.value)} placeholder=\"Etunimi\" />\r\n          <label>Sukunimi</label>\r\n          <input type=\"text\" className=\"form-control\" value={lastname} onChange={({ target }) => setLastName(target.value)} placeholder=\"Sukunimi\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Sähköposti</label>\r\n          <input type=\"email\" className=\"form-control\" value={email} onChange={({ target }) => setEmail(target.value)} placeholder=\"Sähköposti\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Salasana</label>\r\n          <input type=\"password\" autoComplete=\"new-password\" className=\"form-control\" value={password1} onChange={({ target }) => setPassword1(target.value)} placeholder=\"Salasana\" />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label>Vahvista Salasana</label>\r\n          <input type=\"password\" autoComplete=\"new-password\" className=\"form-control\" value={password2} onChange={({ target }) => setPassword2(target.value)} placeholder=\"Vahvista salasana\" />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Rekisteröidy</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register","import React from 'react'\r\n// import Gallery from 'react-grid-gallery';\r\n\r\nconst ImageGallery = ({images}) => {\r\n  const IMAGES = images\r\n  return (\r\n    <div>\r\n      <div style={{\r\n                    display: \"block\",\r\n                    minHeight: \"1px\",\r\n                    width: \"100%\",\r\n                    border: \"1px solid #ddd\",\r\n                    overflow: \"auto\"}}></div>\r\n      {/* <Gallery images={IMAGES} enableImageSelection={false} enableLightbox={false}/> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageGallery","import axios from 'axios'\r\nconst baseUrl = '/api/tasks'\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { getAll, setToken }","import axios from 'axios'\r\nconst baseUrl = '/api/images'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll}","import React, { useState, useEffect } from 'react'\r\n\r\nimport Task from './pages/Task'\r\nimport Login from './pages/Login'\r\nimport Home from './pages/Home'\r\nimport User from './pages/User'\r\nimport Register from './pages/Register'\r\nimport ImageGallery from './pages/Gallery'\r\n\r\n\r\nimport taskService from './services/tasks'\r\nimport noteService from './services/notes'\r\nimport imageService from './services/images'\r\n\r\nimport { getNotes } from './components/Note'\r\n\r\nimport ReactDOM from 'react-dom'\r\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useParams,\r\n} from \"react-router-dom\"\r\nimport ReactGA from 'react-ga';\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([])\r\n  const [user, setUser] = useState(null)\r\n  const [notes, setNotes] = useState([])\r\n  const [images, setImages] = useState([])\r\n  \r\n  async function getImages() {\r\n    const images = await imageService.getAll()\r\n    setImages(images)\r\n  }\r\n\r\n  async function getFunction() {\r\n    const tasks = await taskService.getAll()\r\n    setTasks( tasks )\r\n  }\r\n  async function getData() {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const logUser = await JSON.parse(loggedUserJSON)\r\n      setUser(logUser.username)\r\n    const notes = await getNotes()\r\n    setNotes(notes)\r\n    }\r\n  }\r\n  useEffect( () => {\r\n    getImages()\r\n  },[])\r\n\r\n  useEffect( () => {\r\n    getFunction()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [])\r\n\r\n  const login = (user) => {\r\n    getData()\r\n    setUser(user)\r\n  }\r\n\r\n  const padding = {\r\n    padding: 5\r\n  }\r\n\r\n  const handleLogout = (enevt) => {\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n    setUser(null)\r\n    setNotes([])\r\n  }\r\n\r\n  const handleNotesChange = async (event) => {\r\n    getData()\r\n  }\r\n  \r\n  const logout = () => (\r\n    <button onClick={handleLogout}>Kirjaudu ulos</button>\r\n  )\r\n\r\n  ReactGA.initialize('UA-200757435-1');\r\n  ReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" >\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#\" as=\"span\">\r\n              <Link to=\"/\" className=\"link\">Etusivu</Link>\r\n            </Nav.Link>\r\n            <Nav.Link href=\"#\" as=\"span\">\r\n              <Link to=\"/tasks\" className=\"link\">Tehtävät</Link>\r\n            </Nav.Link>\r\n            <Nav.Link href=\"#\" as=\"span\">\r\n              <Link to=\"/user\" className=\"link\">Oma sivu</Link>\r\n            </Nav.Link>\r\n            <Nav.Link href=\"#\" as=\"span\">\r\n              <Link to=\"/gallery\" className=\"link\">Galleria</Link>\r\n            </Nav.Link>\r\n            <Nav.Link href=\"/user\" as=\"span\">\r\n              {user\r\n                ? <em>{user} kirjautunut {logout()}</em>\r\n                : <Link to=\"/login\" className=\"link\" >Kirjaudu</Link>\r\n              }\r\n          </Nav.Link>\r\n          \r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n\r\n      <Switch>\r\n        \r\n        <Route path=\"/tasks\">\r\n          <Task tasks={tasks} user={user} notes={notes} handleNoteChange={handleNotesChange}/>\r\n        </Route>\r\n        <Route path=\"/user\">\r\n          {user ? <User notes={notes} handleNoteChange={handleNotesChange} user={user} tasks={tasks}/> : <Redirect to=\"/login\" />}\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login onLogin={login} />\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          <Register />\r\n        </Route>\r\n        <Route path=\"/gallery\">\r\n          <ImageGallery images={images}/>\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n\r\n        </Route>\r\n      </Switch>    \r\n      <div>\r\n        <br />\r\n        {/* <em>Sivujen toteutus: Mitavain</em> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}